{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Batch Analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this notebook, we'll learn how to analyze EIS data in batch mode. Normally, you have a single set of EIS data, i.e., set of impedance measurements at various frequencies, plus a common circuit model that you want to fit to the data. This is what we call single circuit, single dataset or SCSD in short. However, there are two other modes of analysis that you might encounter in practice:\n",
    "\n",
    "- Single circuit, multiple datasets (SCMD): You have multiple datasets, each with its own impedance measurements, but you want to fit the same circuit model to all of them. A good example of this is when you have EIS data for multiple samples which you want to compare, or a single sample under different conditions, e.g., EIS data at different cycles during battery cycling.\n",
    "\n",
    "- Multiple circuits, single dataset (MCSD): You have a single dataset, but you want to fit different circuit models to it. This is useful when you want to compare different models to see which one fits the data best, which is by the way the classic use case of AutoEIS itself!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-24T03:08:26.165589Z",
     "iopub.status.busy": "2024-07-24T03:08:26.165259Z",
     "iopub.status.idle": "2024-07-24T03:08:30.241865Z",
     "shell.execute_reply": "2024-07-24T03:08:30.240933Z"
    },
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "import random\n",
    "\n",
    "import autoeis as ae\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "ae.visualization.set_plot_style()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Single circuit, multiple datsets (SCMD)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To test this, we can use a toy dataset that ships with the package. This dataset contains EIS data for a coin cell battery measured at discharged state at various cycles. Let's load the dataset and see what it looks like."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-24T03:08:30.246952Z",
     "iopub.status.busy": "2024-07-24T03:08:30.245842Z",
     "iopub.status.idle": "2024-07-24T03:08:30.252490Z",
     "shell.execute_reply": "2024-07-24T03:08:30.251985Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of cycles: 130\n"
     ]
    }
   ],
   "source": [
    "datasets = ae.io.load_battery_dataset()\n",
    "print(f\"Number of cycles: {len(datasets)}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To save time searching for the optimal circuit by calling the `generate_equivalent_circuits` function, we will use the circuit that we know fits the data well."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-24T03:08:30.255559Z",
     "iopub.status.busy": "2024-07-24T03:08:30.255366Z",
     "iopub.status.idle": "2024-07-24T03:08:30.258354Z",
     "shell.execute_reply": "2024-07-24T03:08:30.257527Z"
    }
   },
   "outputs": [],
   "source": [
    "circuit = \"R1-P2-[R3,P4]-[R5,P6]\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, let's run Bayesian inference on the entire dataset using the given circuit. For convenience, the API for SCSD, SCMD, and MCSD is the same, so we just need to call `perform_bayesian_inference` with the appropriate arguments: the circuit string, list of frequencies, and list of impedance measurements. Since the loaded dataset is in the form of a list of tuples (frequency, impedance), we can easily extract the frequencies and impedances:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-24T03:08:30.261656Z",
     "iopub.status.busy": "2024-07-24T03:08:30.261419Z",
     "iopub.status.idle": "2024-07-24T03:08:30.270138Z",
     "shell.execute_reply": "2024-07-24T03:08:30.269437Z"
    }
   },
   "outputs": [],
   "source": [
    "freq, Z = zip(*datasets)\n",
    "# If you don't understand the above syntax, you can use the following code instead\n",
    "# freq, Z = [], []\n",
    "# for dataset in datasets:\n",
    "#     freq.append(dataset[0])\n",
    "#     Z.append(dataset[1])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-info\">\n",
    "\n",
    "Note\n",
    "\n",
    "`perform_bayesian_inference` can handle all three modes of analysis: SCSD, MCSD, and SCMD. You only need to pass the appropriate arguments. The main three arguments are: `circuit`, `freq`, and `Z`. If any of these arguments is a list, then the function will automatically switch to the corresponding mode of analysis. Of course, you need to make sure the arguments are consistent, e.g., for SCMD, the length of `freq` and `Z` must be the same, etc.\n",
    "\n",
    "</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, `freq` and `Z` are lists of frequencies and impedances, respectively, each associated with a different cycle. We can now call `perform_bayesian_inference` with these lists to get the posterior distributions for the circuit parameters for each cycle."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-24T03:08:30.273238Z",
     "iopub.status.busy": "2024-07-24T03:08:30.273034Z",
     "iopub.status.idle": "2024-07-24T03:14:48.471191Z",
     "shell.execute_reply": "2024-07-24T03:14:48.470384Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " "
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "84088ff4285a4924853c3e7893c67446",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Refining p0:   0%|          | 0/130 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[2;36m[03:10:52]\u001b[0m\u001b[2;36m \u001b[0m\u001b[1;31mERROR   \u001b[0m Failed to refine p0 for circuit R1-P2-\u001b[1m[\u001b[0mR3,P4\u001b[1m]\u001b[0m-\u001b[1m[\u001b[0mR5,P6\u001b[1m]\u001b[0m:      \n",
      "\u001b[2;36m           \u001b[0m         Failed to fit the circuit parameters.                       \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[2;36m          \u001b[0m\u001b[2;36m \u001b[0m\u001b[1;31mERROR   \u001b[0m Failed to refine p0 for circuit R1-P2-\u001b[1m[\u001b[0mR3,P4\u001b[1m]\u001b[0m-\u001b[1m[\u001b[0mR5,P6\u001b[1m]\u001b[0m:      \n",
      "\u001b[2;36m           \u001b[0m         Failed to fit the circuit parameters.                       \n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "8ae3c377c5f24b5491b7a6de4f816ad3",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Performing Bayesian Inference:   0%|          | 0/130 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[2;36m[03:11:09]\u001b[0m\u001b[2;36m \u001b[0m\u001b[1;31mERROR   \u001b[0m Inference failed for circuit:                    \u001b]8;id=692782;file:///Users/runner/work/AutoEIS/AutoEIS/src/autoeis/core.py\u001b\\\u001b[2mcore.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=402567;file:///Users/runner/work/AutoEIS/AutoEIS/src/autoeis/core.py#768\u001b\\\u001b[2m768\u001b[0m\u001b]8;;\u001b\\\n",
      "\u001b[2;36m           \u001b[0m         R1-P2-\u001b[1m[\u001b[0mR3,P4\u001b[1m]\u001b[0m-\u001b[1m[\u001b[0mR5,P6\u001b[1m]\u001b[0m. Error: Inference couldn't \u001b[2m           \u001b[0m\n",
      "\u001b[2;36m           \u001b[0m         be performed for circuit: R1-P2-\u001b[1m[\u001b[0mR3,P4\u001b[1m]\u001b[0m-\u001b[1m[\u001b[0mR5,P6\u001b[1m]\u001b[0m, \u001b[2m           \u001b[0m\n",
      "\u001b[2;36m           \u001b[0m         because \u001b[32m'priors'\u001b[0m are not provided, possibly      \u001b[2m           \u001b[0m\n",
      "\u001b[2;36m           \u001b[0m         because circuit fitter failed to find an initial \u001b[2m           \u001b[0m\n",
      "\u001b[2;36m           \u001b[0m         guess \u001b[32m'p0'\u001b[0m.                                      \u001b[2m           \u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[2;36m[03:13:18]\u001b[0m\u001b[2;36m \u001b[0m\u001b[1;31mERROR   \u001b[0m Inference failed for circuit:                    \u001b]8;id=181572;file:///Users/runner/work/AutoEIS/AutoEIS/src/autoeis/core.py\u001b\\\u001b[2mcore.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=953924;file:///Users/runner/work/AutoEIS/AutoEIS/src/autoeis/core.py#768\u001b\\\u001b[2m768\u001b[0m\u001b]8;;\u001b\\\n",
      "\u001b[2;36m           \u001b[0m         R1-P2-\u001b[1m[\u001b[0mR3,P4\u001b[1m]\u001b[0m-\u001b[1m[\u001b[0mR5,P6\u001b[1m]\u001b[0m. Error: Inference couldn't \u001b[2m           \u001b[0m\n",
      "\u001b[2;36m           \u001b[0m         be performed for circuit: R1-P2-\u001b[1m[\u001b[0mR3,P4\u001b[1m]\u001b[0m-\u001b[1m[\u001b[0mR5,P6\u001b[1m]\u001b[0m, \u001b[2m           \u001b[0m\n",
      "\u001b[2;36m           \u001b[0m         because \u001b[32m'priors'\u001b[0m are not provided, possibly      \u001b[2m           \u001b[0m\n",
      "\u001b[2;36m           \u001b[0m         because circuit fitter failed to find an initial \u001b[2m           \u001b[0m\n",
      "\u001b[2;36m           \u001b[0m         guess \u001b[32m'p0'\u001b[0m.                                      \u001b[2m           \u001b[0m\n"
     ]
    }
   ],
   "source": [
    "results = ae.perform_bayesian_inference(circuit, freq, Z)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "`results` is a list of `InferenceResult` objects. Each object contains the posterior distributions for the circuit parameters for a single cycle with other useful information. Let's take a look, e.g., let's see how many of the infereces converged:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-24T03:14:48.475575Z",
     "iopub.status.busy": "2024-07-24T03:14:48.475394Z",
     "iopub.status.idle": "2024-07-24T03:14:48.478540Z",
     "shell.execute_reply": "2024-07-24T03:14:48.478148Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inference for cycle   7/130 did not converge\n",
      "Inference for cycle  82/130 did not converge\n"
     ]
    }
   ],
   "source": [
    "for i, result in enumerate(results):\n",
    "    if not result.converged:\n",
    "        print(f\"Inference for cycle {i+1:3}/{len(results)} did not converge\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, let's inspect a sample inference result randomly picked from the list:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-24T03:14:48.482033Z",
     "iopub.status.busy": "2024-07-24T03:14:48.481890Z",
     "iopub.status.idle": "2024-07-24T03:14:48.614135Z",
     "shell.execute_reply": "2024-07-24T03:14:48.613732Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "List of InferenceResult attributes/methods:\n",
      "  >> Z\n",
      "  >> circuit\n",
      "  >> converged\n",
      "  >> freq\n",
      "  >> mcmc\n",
      "  >> num_divergences\n",
      "  >> print_summary\n",
      "  >> samples\n",
      "  >> variables\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA74AAALmCAYAAABl1EgvAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjkuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/TGe4hAAAACXBIWXMAAB7CAAAewgFu0HU+AABweklEQVR4nO3dd3hUVeLG8TeFFEBCCRAgGKoKiIAQFFQ6IqyKKAK21d0VG65lLSioWLAt7IquyioqWEDALhYUpCgg3UITFYiUNCDU9HJ+f+SXuzNkZjIJCTM5fD/Pk4ch95xzz70nd+68c1uIMcYIAAAAAABLhQa6AwAAAAAAVCWCLwAAAADAagRfAAAAAIDVCL4AAAAAAKsRfAEAAAAAViP4AgAAAACsRvAFAAAAAFiN4AsAAAAAsBrBFwAAAABgNYIvAAAAAMBqBF8AAAAAgNUIvgAAAAAAqxF8AQAAAABWI/gCAAAAAKxG8AUAAAAAWI3gCwAAAACwGsEXAAAAAGA1gi8AAAAAwGoEXwAAAACA1Qi+AIAKWbJkiUJCQhQSEqJzzz030N2pMo8++qiznDNmzHCbNmPGDGfaqFGjAtPBcirpb0hIiHJyctymtWjRwplWnVTHcQiEvLw8Pfvss+rWrZtiYmIUGhqq0aNHl7udPn36uP0d+fqpWbOmWrZsqauuukpffvllueaTkZGh999/XxMnTtS4ceP0z3/+Ux9++KH2799f7j4DQHigOwAA8G3hwoVatmyZpOIPnH369Alsh3BCvfbaa9q9e7ck6YYbblCLFi0C26ETrKCgQBMnTnT+/+ijjwauM9XczTffXOrLm/z8/CqdZ3Z2tpKSkpSUlKTZs2froosu0jvvvKMGDRp4rZOVlaVHHnlEL7/8srKzs0tNj4iI0M0336xJkyYpMjKyKrsPwCIEXwAIcgsXLtSzzz7r/J/ge3J57bXXtGrVKknFY38yBt/HHnvM+T/Bt2IKCgr0zjvvOP/v3bu3zj77bCUmJh5Xuz169FDPnj09TsvKylJ6erq+/fZb7d27V5I0f/58XXLJJVqyZIkiIiJK1Tl8+LAGDRqklStXep1nXl6e/vOf/2jbtm367LPPqt0ZCgACg+ALAKiQPn36yBgT6G4E1A033KAbbrgh0N0oFxvHrDqOw4mWlpamgoICSVKjRo20ePHiSgmMF154YZlfRhQVFWnSpEl64IEHJEnff/+9XnnlFf39738vVfaGG25wQm+9evX02GOPadiwYWrYsKH++OMPvfHGG5o8ebIKCwv1xRdf6I033tDf/va3414OAPbjGl8AAADLuZ7SnJCQcEKPkoaGhmrs2LG69tprnd8de8q1JH322Wf66KOPJEkNGzbUmjVr9Pe//13x8fGKjIzUaaedpmeeeUb//ve/nTrPPPNMlfcfgB0IvgAAACeR6OjogMzXNfj+8MMPysvLc5v+9NNPO6+nTZum1q1be2xnzJgxio+PlyT9/vvv+v3336ugtwBsQ/AFYIWkpCTnLqKXXXaZJCkzM1MvvviievTooUaNGqlWrVpq37697rvvPiUnJ/vVbkFBgWbMmKFLLrlEzZs3V1RUlOrXr6+uXbvqwQcf1M6dO/1q58cff9Qtt9yi9u3b65RTTlFUVJSaNWumwYMHa+rUqaU+AEr/u8Ou6/W9jz32mLOcS5Ys8Tiv9PR0TZw4Ueeee64aNmyoqKgotW7dWiNGjNBnn32moqIir/10vVNzyQ2FNmzYoJEjR6phw4Zu8y3PXZ1/+eUX3XfffTrrrLNUv359RUVF6dRTT9Xw4cM1Z84cn31yHdsbb7xRkvTHH3/ob3/7m5o2barQ0FCPR4/8kZ+fr1deeUV9+/ZVXFycoqKi1KpVK40cOVLfffddmfX9vZvwvHnzdOWVVyohIUHR0dGqXbu2WrVqpWuuuUafffaZz2Uuub5Xkvr27evxrsslvxswYIAkaf/+/brrrrvUokULhYeHu52K6uuuzsfKy8vTiy++qAsuuECxsbGKjo5Wy5Ytdf3112v58uVe67n2Py4uzuc8XPvkev1yybo9NqSVlHW91r08d3VevXq1xowZo3bt2ikmJkY1a9ZUq1atdN1112n+/Pk+67rOp+R62ZSUFD388MPq3Lmz6tatq1q1aqlNmza6+eabtXHjxjKX3V8ZGRl69tlndf755ysuLk4RERGKi4tTv3799Nxzz+no0aMe691www0KCQlRy5Ytnd99++23znKcyFPEXcfXGON2d+bffvtNK1askCR16dJFQ4cO9dpOWFiY7rnnHl1xxRW64oorlJubK0maMmWKs1z9+vXzWt91O/J1jfMzzzzjlJsyZYqfSwkgaBkAsMCOHTuMJCPJDB061Pz000+mZcuWzu+O/aldu7aZO3euzzZ/+ukn065dO69tSDIRERHm8ccfN0VFRV7bGT9+vAkNDfXZTps2bcxvv/3mVi8hIcFnncWLF5ea1/Tp001MTIzPej169DBbtmzx2NfFixc75Z544gkze/ZsExER4XG+rmXPOeccj+0VFRWZBx980ISHh/vs01lnnWV++eUXj224ju3f/vY3s2TJklLLOH36dK/r35sdO3aYzp07++zXww8/bCZMmOB1PtOnT3emjRw5stQ8jhw5YgYPHuxzHpLMkCFDTGZmpsdl9vbjquR3/fv3Nxs2bDDx8fFuZSdMmFCqrCSTnZ3t1o7r39y2bdvK/PsfPXq0yc/P9zlmjRs3LnMsSsomJCR4XLeefnr37u33OBhjTE5OjvnrX/9qQkJCfLbbp08fk5yc7LEN1/m8/fbb5t133/W5vUVFRZn33nuvzOUvy5w5c0z9+vV99js2NtZ8+umnpepef/31Putdf/315e5P7969Pf5tleWHH35wm/fBgwedac8995zz+6eeeqrcfTLGmM2bNztt1KxZ0+Tl5ZUqk5eXZ6Kjo51yYWFh5siRIx7bu/DCC51y3t4zAVQf3NwKgHV27typgQMHKj09XTExMerfv7+aNGmi3bt3a8GCBcrKytLRo0c1atQohYWF6fLLLy/Vxo8//qh+/frpwIEDkqRatWppwIABat68uQ4ePKiVK1fq999/V15enh555BFt375d06dPL9XO5MmT9eSTTzr/v+CCC3TGGWcoIiJCO3fu1JIlS3TkyBH9/vvv6tevn37++WfVrVtXknTTTTcpIyND3333nVavXi3J/Q6qzZs3d5vXlClTdPfddzv/b9++vXr27KmIiAht375dixcvVm5urr7//nudf/75WrFihU477TSv63Hp0qWaMGGCioqK1KpVK/Xq1Ut169ZVkyZN/BwJ6a9//avb0diOHTuqW7duioqK0o4dO7Ro0SLl5eXp559/Vvfu3fXdd9/prLPO8tre1q1bNWTIEGVlZalp06bq27evGjZsqNNPP93vPknSwYMHNXjwYP3yyy+Sio8i9ujRQ2eddZby8vK0ePFi7dixQ0888YRatWpVrrZdjRo1ynl2aWRkpC688EKdeuqpKigo0JYtW7R8+XLnJj2jRo3Sp59+KkmKiYnRPffcI0maNWuWUlJSJEkjRowoNe6u9u3bpwEDBigtLU3169fXgAED1KRJkwrdubdv377auXOnQkNDdd5556ljx47Kzs7WokWL9Mcff0gqPh01NzdXb775ZrnbL8uZZ56pe+65R4WFhW5H20rWi7fTYD0pKCjQJZdcogULFji/O+ecc9SxY0eFhYVp69at+vbbb1VUVKQlS5YoMTFRq1atUrNmzby2OXv2bH355ZcqKipSs2bN1L9/f9WtW1dJSUmaP3++8vLylJOTo7/+9a/q0aOHz7Z8mT59um688UbnrIgmTZqob9++ql+/vlJTU7Vo0SJlZGRo3759Gjp0qF5//XX95S9/ceoPHjxYsbGx2rVrl+bOnStJ6tChgy666CJJOu67OpeH652amzZtqpiYGOf/33//vfP6/PPPr1D77dq106mnnqqdO3cqKytL69ev1znnnONWZu3atW6PSCosLNTy5cs1aNAgt3L5+fnOWQ0tWrTQGWecUaE+AQgigU7eAFAZPB0hu/zyy82BAwfcyu3du9ftW/x69eqZ9PR0tzKZmZnm9NNPd8oMHTrUZGRklJrnzJkzTc2aNZ1y//3vf0u1U7t2bSMVHxleuHBhqTYOHDhgLrroIqeN8ePHlyozduzYMo+uLF++3ISFhRlJpk6dOub9998vVSYtLc0MGjTI7SjrsUeqXY/iSjIhISFmypQpHo9ol3XE97XXXnOmn3LKKeaTTz7x2CfX8WjZsmWpo5Cexvb+++83ubm5HteFP2677TanraZNm5oVK1a4TS8sLDRPPfVUqfmW54jv0qVL3Y5k7tq1q1Q/tmzZ4nZmwoIFC0qVOeecc5zpno7yG2NK9fO6667zehTLtZyvI76SzGmnnWbWr19fat2MHz/erdxHH33kVqYyjviWyM7OdpuXJ2Ud8X3ooYec6U2aNDHLli0rVWbbtm3m7LPPdsr16NHD53xKfp544olSf4vr1683tWrVcso8+eSTZa4DTzZu3GiioqKcdh577DFTUFDgViYnJ8fcf//9TpmIiAjz008/lWrLdXutyFFeVxU54puenu72tz5mzBi36a5nF6SlpZmioiIza9Ysc/HFF5umTZuaiIgIExsba/r162deeumlUn+7JUaPHu20M3ny5FLTn3322VJjOG7cuFLlli1b5ky/+eab/VpGAMGN4AvACseGo44dO3o8zc2Y4g/Srh/AHn/8cbfpkydPdguHOTk5Xuc7Y8YMtwDlWvbrr792pvXv399rG8nJyc6p0B07diw13Z/g27VrVyeoegpPJY4N9R9++KHb9GODr6cPhJ7KHht8s7OzTWxsrDP93Xff9dpOVlaW24feF154wW36sWN79dVXe23LH0lJSc6XBBEREWbDhg1ey7qu+/IG33HjxrmFI29mz57tlPv73/9eanp5g+/5559vCgsLvc7P3+DbqFEjk5KS4rWd4cOHO2V79uzpNi2Ygm9ycrKpUaOGs30sX77caz/S0tJMo0aNnLaOPXX42OB77HuHq/vuu88p96c//cnH0nt38cUX+x2+brjhBqfs5ZdfXmp6IILvwYMHzU8//WSefPJJExcX59SpVauWSUpKcivr+kVBenq62zw8/SQkJHgcyw8++MApM3To0FLTS9Zphw4dnC8mzz///FLlJk6c6LRz7Bc7AKonbm4FwErjx49XjRo1PE6LiorSuHHjnP/PmTPHbfrLL7/svH7iiScUGRnpdT7XX3+9c8OW5ORkffPNN860ffv2Oa8PHjzotY0mTZpo6tSpmjRpkm655Rav5bxZsWKF1q1bJ0kaMmSIc4MjT2rWrOl2OvS8efO8lq1du7bz3M3ymjt3rrP8Z599ts8bDkVHR+v+++93/v/222/7bPuJJ56oUJ9KzJgxQ4WFhZKkG2+8UWeeeabXsg8//LBq165dofm4jn/JKfOeXHTRRZo0aZImTZqkgQMHVmherh5//HGFhh7/7v3+++/3eWOqxx9/3Hm9YsUKpaWlHfc8q8K0adOcR/lcdtllzqUCnjRq1Ei33nqr839ff4uNGzfWgw8+6HW663bo703wXCUlJemLL76QVPye5bq+PZkwYYLz+pNPPtGRI0fKPc+KcL3h3rE/devWVadOnTR+/HilpqZKKr4x1auvvqqEhASnjSNHjigzM1OSVKNGDV166aVaunSppOJTsW+55Rbdcsst6t+/vyIiIiQV3+Bu4MCBbqdIS1L//v0VHl58Jd+xN2ArKipyfjdgwABdcMEFkqQ1a9aUutHb4sWLnf7079//+FcUgIAj+AKwTlhYmAYPHuyzzJ/+9Cfn9ebNm3X48GFJ0rZt27R9+3ZJUv369TVkyJAy5+d6jbDrnYBdrw1dt26d7rzzTmc+x7rpppt077336rbbbitzfsdyvRPtsdepeeL6Ic7XnXl79OihU045pdz9keR2LeU111xTZvnLLrtMYWFhkoofc1LyIfhYbdu2Pa5rbiXpq6++cl6XdQfgWrVq6cILL6zQfFz7+eKLL+r11193ArermJgY3Xvvvbr33nt1ySWXVGheJaKjo9WrV6/jaqPEsGHDfE5v166d2rdv7/y/5Dr0YOP6t+j6OB1vrrjiCue1rzt79+vXzwlYnjRu3Nh57e3v2ZdvvvnGua534MCBatSokc/yLVq00Nlnny2p+LrVkjskB5O2bdtq3rx5uvrqq91+77p+8vPztXLlSjVv3lxLly7V6tWrNXXqVE2dOlULFy7Uli1b1LFjR0lSVlaWrr/+ehUUFDj1Y2JinLvM79u3T1u2bHGmbdy40fkSqnfv3urbt68kKTc31+3u6Xl5ec7669mzZ4XfBwEEF25uBcA67dq1U506dXyWadKkiZo0aaKUlBQZY7Rnzx7VqVNHa9asccp0797d5wfbEm3btnVeJyUlOa/POeccnX/++Vq2bJkk6YUXXtDrr7+u/v37q2/fvurdu7c6d+5c6tE05eUaOL766ivnxkPeGGOc177K+vMYGm9c1+N5551XZvm6desqNjZWaWlpKigo0O7duz3esOp4+iQVL/uPP/4oqfiGVl26dCmzzllnnaUPP/yw3PO6/vrrNXnyZO3bt095eXm68cYb9dBDD+miiy5S79691adPH7fHu1SG2NhY5wuE41HyuKWydOnSRZs3b5Yk7dq167jnW9mMMVq7dq3zf3/+Fl2359TUVOXm5no866Osm1W51vH0hUdZyrsNScV9X79+vST396Kq5HrDPU+io6PVsGFDde/eXYmJiR7/Po99nFt0dLQWLlzo8eZ7rVq10ocffqj27dsrPz9fv/32m+bNm+f2Rc2gQYOc993vvvtO7dq1c15Lxdt+r1693G4Ut3TpUvXu3VuStGrVKucGWCU3AQNQ/RF8AVinrCMjJRo0aODcLbfkKEB6eroz3d8ji65HdjIyMtymffzxx7ruuuucO/tmZmbq008/de7e26BBA1100UUaNWqUhgwZUqFTVF1PMf3888/1+eef+103NzfX6wf74zldtqLrsWRZjl2PldEnSTp06JDzgbZWrVp+ncZcv379Cs0rLi5OCxYs0MiRI/Xrr79KKg5SM2bMcO503bp1a1188cW67rrr1LVr1wrNx1VlnOIsybmzeFkaNmzovD506FClzLsyHTlyxDmFtWbNmm7bqjdRUVGqU6eOc3ZGRkaGxzuZH/t84cpW2e9FVeXCCy90e050RRy7Lq+77jqfd5xv06aNhg8frnfffVdS8dFx1+B70UUX6eGHH5YkLVu2TDfddJOk/wXfDh06qEGDBqpbt65iYmJ06NAhffvtt079ktOcS9oCYAdOdQZgHX8/tLteAxwVFSVJbtfF1axZs9zzPva64gYNGuiLL77Qt99+q7/97W+lPkDv379fM2fO1CWXXKKzzjpLW7duLfc8jx49Wu46ro492lIZKns9VhbXUypLxrws/hz196Zz587auHGjZs+eraFDh5YK2tu2bdPzzz+vbt266Yorrjhh12WWxfWsAF9cz1ao6Hoquf62Khzv36Hk/W+xsr5k8CZYt6GqcOwZOn369CmzjuslCMce3e7atavzpYzr6eolr0uO7IaFhTmXBqxcudL5WywJvnFxcerUqVM5lgRAMCP4ArCO6zMafXE9QlVyVK9WrVrO7/y9Ls/1yEy9evU8lrngggv02muvKTk5WZs3b9bLL7+sESNGuJXftGmT/vSnP5W6yUpZXK8/mz9/vkzxHfv9/qmK69eqaj0eL9dlPXz4sF8Bz9eNyfxRo0YNjRw5Uh9//LEOHDigFStW6Omnn9bAgQPdjrR/+OGHFbq5WVXwdTMub+UqOmbernuvDBX5O8zOznZCZ8kNmgIhWLehqhAZGem2bbqeSeCN66nmx/4NhYSEODeKS0pK0p49e7R9+3YlJydL+l/wleRc55uZmal169YpJyfHuWHWoEGDjvtSFADBg+ALwDoldw/1JScnx7m+NSwszDk92vU06d9++82v+f3888/O65JryXxp166dbr31Vs2ZM0fp6emaNWuWc6rftm3b3G5W5Q/X616D5c665V2Pe/fudcatZs2abnd8rUx16tRxAkVeXp5f10FW5Ci8N+Hh4erRo4ceeOABff3110pPT3e7M/CcOXO0f//+SptfRWVlZbndldob13Xj6Zpsf1TltagxMTHOlwvZ2dnas2dPmXU2btzofCHSpk2b4zrifzxOxHtRMHE9surPmQ+uZ7p4uhzB9RTl7777zu1UZk/BV5K+/fZbrVy5Urm5uaXaAFD9EXwBWOfnn38u8yjdt99+69xwpnPnzs6phImJiU6ZlStXKisrq8z5uQbVHj16OK8ffPBBDR8+XFdeeaXXo7jh4eG66qqrdNdddzm/K2/QKrmDqSS3O5N6s337dl177bW69tpr9cwzz5RrXv5yXY+LFi0qs3zJNdCS1K1btyoNG927d3deL1y40GdZY4yWLFlS7nnk5eVp+PDhGj58uMaOHeu1XJ06dfTUU085fzeFhYX6/fffyz2/qlDyOBlvDh8+7DxGq0aNGs4dhSX3GzuVtQ0d+ziayhQSEuJ27XR5/xZdt+cTrbzb0M6dO50bjUVGRvp147Zg0q1bN+e1P3cIL/nbk+Tc5dnVhRde6Byt/e6775zTnNu1a+f2pUKnTp3UoEEDScX7hZLTnENDQyt8R3cAwYngC8A6hYWFZT4L9j//+Y/z2vV5m23btnXu6nr06FG99dZbPttZsGCB8/ij+Ph4t0fJbNiwQR988IHef/99tzu0euJ61La8N825+OKLnddz584t85rff/3rX5o5c6ZmzpxZ7tOq/eX6GKjXXnvNOYLizSuvvOK8PvZRJ5Xt0ksvdV5PnTrV5+nO8+bNK/Mu2Z5ERERo/vz5+uCDD/TSSy+VuZ6PZ/yrymuvveZz+vTp053rwy+++GK3U3NjY2Od0HHkyBGvZyIUFRXp1VdfraQee+b6t/jSSy/5LFtQUKA33njD+X9V/y36MmjQIOcOyEuWLNGmTZt8lnfdhoYNGxY0f0f+cn202Jtvvunz9O68vDy98847zv89PQascePG6ty5syT34Ot6tFcq/nKk5HfLli1znsWemJhY4RvbAQhOBF8AVnr00Ue9Hjn973//q88++0xS8ZGRMWPGuE2/4447nNfjx4/32s6hQ4fcyt5xxx1uj+pwDcETJ050e9akq9zcXLeAfeyjQVxvbOPpVM2zzz7bOV1v3759uvPOOz3OR5Lee+89TZ06VVLxNYQ333yz17LH48orr3Ru5LVz507dc889Xsu+8sorzjMzGzduXOVh4y9/+YtiYmIkFT8z2NtR7z179uj222+v8HxKxj8zM1OTJk3yWi4pKcl51mzdunVLnaJa1vhXlfnz52v69Okep23fvl2PP/648/9j/+Zq1Kjh9qimadOmeWxn4sSJ2rBhg89+REREuJ0BUN51MHr0aCcErlq1SpMnT/Za9uGHH3a+6DjzzDOd60QD4dRTT9Vll10mqfgLgr/85S9ej57/9NNP+ve//y2pOMi5nkFSXZxzzjnOUe6UlBTddNNNznOMjzVu3DhnnHr37u12Foerkueab9y40Tld/NjgK/3vdOdDhw45zzbnNGfAQgYALLBjxw4jye2nQYMGZvLkyWbLli1m3759Zu3atebGG280ISEhTpkHHnigVFv5+fnmnHPOccrExMSYZ555xmzatMns37/fbNu2zUyfPt20adPGKdOxY0eTl5fn1k56erqpXbu2U6ZHjx5m7ty5JikpyWRkZJhffvnFvPrqq6ZDhw5Omd69e5fqz1tvveVMDwsLM1dffbW54447zNatW50yv/76q6lTp45T7sILLzRffvmlSU5ONnv37jXLly83o0ePNqGhoU6Z559/vtS8Fi9e7Ey//vrrfa5z17LnnHNOqemffvqp23gMGjTIfPHFF2bPnj0mPT3dfP/99+bmm292G4/Zs2f7HFtP66ciZsyY4da3q666yixdutSkpaWZXbt2mTfeeMM0adLESDIJCQlOuenTp7u1M336dGfayJEj3aZ98cUXbvO49tprzcKFC01ycrLZt2+f+eGHH8xjjz1mYmNjnTITJkwo1de//vWvbn/To0ePNrfffrtbmZLpCQkJZS67a5+ys7PdppUsa40aNYwkExISYkaPHm2+//57k56ebnbs2GH++9//moYNG7qtO0/uu+8+t7/b8ePHm59//tls377dfP311+aKK64wkkxUVJRp0KCBz/63atXKaatdu3ZmzJgxZsqUKX6NgzHGvPDCC6XGe/HixSY1NdWkpKSYRYsWmSuvvNKtv8uWLSvVjut8PI2Vqy1btpRrXDzZuXOnqVu3rtPO6aefbt58802zfft2s3//frNx40bz9NNPu73P3HLLLR7bKs+2XZbevXv7vR7KY9OmTSYqKspp+7zzzjOffPKJ2bNnj9m7d6/57rvvzMiRI53pNWvWNFu2bPHa3pIlS0rtF5KTk0uV27hxY6ly33//faUtF4DgQPAFYAXXcJSYmGgGDhxY6oPMsT8jR440hYWFHtvbs2ePWyD19dOqVSuze/duj+288847bsHO10/z5s3Nrl27SrVx6NAht1Bb8rN48WK3ckuXLnX7kOzrZ+zYsR77W5nB1xhjnnvuOb+X/+mnn/bYRlUEX2OMGT9+fJl96tatm5k1a1aFgq8xxtx0001+LbskM3DgwFJfnhjjvp5df1yVJ2C5tuEt+LZu3do8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+AIAAAAArEbwBQAAAABYLTzQHUDVycrK0sGDB9WwYUPVqFGj0trNzc3V/v37Vb9+fUVFRflVZ/Xq1Xr55Zf17bffKiUlReHh4Tr11FPVu3dvjRkzRh06dPBZf968eXrzzTe1bt06paamqkaNGmrevLn69++vu+++Wy1btvRYLyMjQ4cPHy6zfzExMapXr55fy3I8bBmTnTt3qqioqMx5NGvWzOdyFhYWau/evapZs6bq1KnjV78rmy1jcjzYTspn5cqVOv/881VYWKjFixerT58+ZdY5nmUK9HZi03iwL/HtRI8J+5KyBfJ9q7zYTjw7fPiwMjIyyixXq1YtNWzY0GeZI0eO6OjRo2rUqJHCwsL87rMk5efna9++fapTp45q1apVrrrWMLDOrFmzzNlnn21CQkKMJBMSEmLat29vJk+ebPLz8yvc7vz5880FF1xgwsPDjSQjybRs2dI88sgj5ujRo17rPffccyYsLMypc+xPjRo1zIsvvuixbl5enhkxYoTXupJMZGSk+eCDDzzWHzVqlM+6JT9jx46t8Hrxh01jkpWV5SxHWT9btmzx2MYvv/xiRowYYWrVquWUrVevnhk9erTZtm1bhddHedgyJv6Mw7E/EyZMcGuD7cR/R44cMa1bt3baWbx4cZUtU6C3E5vGg32Jb4EYE/Ylvp3oMWFfUraKjskDDzzg13oZOXKkx/oFBQXmxRdfNGeccYZTNiwszCQmJprXX3+9zH6vWrXKDB482ERGRjr1mzRpYu6++26TlpZW4fVRHRF8LXPrrbf63KjOO+88c/jw4XK3+8wzz/hst3379mbXrl2l6i1atMh542nTpo154403zE8//WTWrFljnn76aVOnTh3nTWnJkiWl6t99993OPHr37m0++ugjs3nzZrN27Vrz6KOPmqioKCPJREVFmY0bN5aq37Vr14C/Cds2Jhs2bPB7p+jpw8o333zj9iHl2J+6deuab775ptzrozxsGpOKfFh5/PHH3dpgOyk9Jt7ceOONbvV9Bd/jWaZAbye2jQf7Eu8CNSbsS7wLxJj4OxauP+xL/BuTK664wq/14in45ufnm0suucRnvcsvv9xroH/nnXfcgvqxP82aNTM///xzuddHdUXwtcirr77q/CH37dvXrFq1ymRlZZmdO3ea8ePHOx+sr7766nK1+9VXXzl1O3XqZBYtWmQy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MrLc/bYVwdcCOTk5zrdWZT34um7dus7rkg3Kl5IHbldWuy+++KJatWqlbt266e6771Z6erpatGih5cuXO6dq+OPQoUO69tprNWnSJElSVFSU/vnPf7qVKXmzyc/P18CBA/Xxxx9r8+bNWrNmjR599FHVrl1bBQUFuv322/X222/7PW9/2Domv//+u/M6NDRU999/v5YvX66tW7dq/vz5uuyyyyQVf5N64YUXOqcYuva7bt26Cg8PP+5+l5etY+LN008/rX379qlu3brOhxZP2E68t/vkk09q5cqVatmypZ577rky5ykd/zIFcjuxcTzKwr4kMGPCvsSzYNxO2Jcc35i4rpfExES9++672rhxo3788Uf9+9//VqNGjSQVr+cnnnii1HwrOu/K/lxiC4KvBVw3jujoaJ9lXb/1cb2eqay2K7tdV0lJSerVq5d++uknv8rPmTNH7du318yZM52+zZ49u9T1DyU71nvuuUdff/21hg4dqnbt2qlbt26aMGGCVqxY4Wzwd911l3PNUGWwdUxK3sBr1qypJUuW6Nlnn1XPnj112mmnadCgQfroo4+cN+49e/Zo/PjxJ7Tfvtg6Jp6kpqY636rfc889iomJ8VqW7cRzu2vWrNETTzyh0NBQvfnmm6pdu3aZ83Sdb0XnHcjtxMbx8IV9SeDGhH2J77aDZTthX3L8Y1Lytz5ixAitWLFCo0aNUocOHdSpUyfdfffdWrdunXPU9YknntD27dsrZZkCvZ0EK4KvBUJD/R9G1z/qqKioSmvb33YfffRRFRQUaPfu3frmm280atQohYSEaOfOnerfv7/PN8ItW7aof//+GjVqlHOKVJcuXbR69WoNHTq0VPm9e/cqOztbkydP9thex44dNWHCBEnFbxDz5s3za1n9YeuYDBs2TNnZ2Tp48KDXa04eeugh53qTOXPmOP2o7H6Xl61j4smzzz6r7OxsRUdHa8yYMT7Lsp2UbjcrK0vXXnutCgoK9I9//EMXXHCB3/083mUK5HZi43h4wr6kfG1XxZiwLzm+tk/EdiKxLylP297aXbdunbKzszV79myPZyjEx8drypQpkoqPCs+aNatc8/U270BvJ8GK4GsB12/0MjMzfZZ1vVGE6+kNZbVdme2GhYWpWbNm6tevn959910988wzkqT9+/dr2rRppcoXFRXpySefVOfOnZ2bk8TE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",
      "text/plain": [
       "<Figure size 550x400 with 1 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 371,
       "width": 479
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "while True:\n",
    "    result = random.choice(results)\n",
    "    if result.converged:\n",
    "        break\n",
    "\n",
    "# Randomly select a parameter and plot its posterior distribution\n",
    "param = random.choice(result.variables)\n",
    "fig, ax = plt.subplots(figsize=(5.5, 4))\n",
    "ax.hist(result.samples[param])\n",
    "ax.set_title(f\"posterior distribution of {param}\")\n",
    "\n",
    "# Let's list InferenceResult attributes/methods\n",
    "print(\n",
    "    \"List of InferenceResult attributes/methods:\\n  >>\",\n",
    "    \"\\n  >> \".join(attr for attr in dir(result) if not attr.startswith(\"_\")),\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This was just a quick overview, but you can do all sorts of analyses with the results, e.g., plotting the evolution of posterior distributions as a function of cycle number in form of violin plots, etc."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Single circuit, single dataset (SCSD)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We've already covered how to use `perform_bayesian_inference` for SCMD in the previous section. For SCSD, you just need to pass a single impedance dataset to the function, i.e., a NumPy array instead of a list of arrays. The rest of the process is the same!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Multiple circuits, single dataset (MCSD)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Similarly, you can use `perform_bayesian_inference` for MCSD by passing a list of circuit strings instead of a single string. Alternatively, you can pass a dataframe, but it needs to be formatted with columns named `circuitstring`, and `Parameters` with the circuit strings and initial guesses for the parameters, respectively. This unusual format is for legacy reasons and might be changed in the future."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Multiple circuits, multiple datasets (MCMD)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You might ask, what about MCMD? Well, we can easily extend the API to support this mode of analysis, but we couldn't find an actual use case for it, so it's not implemented to keep the codebase sane! If you really need this feature, you can easily implement it yourself by calling `perform_bayesian_inference` in a loop over the datasets!"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.11"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "069cc40b710140f2a7686efaea0f15df": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "09cf052a570e49c6b19e986bfe4d2b32": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_55ecd555b5ac4d4bbd629cf17371df59",
       "placeholder": "​",
       "style": "IPY_MODEL_776dd6f57fee4c88bd5499ac8b7abd4b",
       "tabbable": null,
       "tooltip": null,
       "value": "Performing Bayesian Inference: 100%"
      }
     },
     "0a2b0c01d67b4b57bc85c60f9b05a27b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": "inline-flex",
       "flex": null,
       "flex_flow": "row wrap",
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "100%"
      }
     },
     "117be8fc61124517b6c56b910218ebb3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "18df7fcd651441f3b9eb203bc3984623": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_73c2999b1d6c4dcea077e1fc2b2a1661",
        "IPY_MODEL_e5fd82142a7344e2b61e4e42f61b45cd",
        "IPY_MODEL_862b13d52c5645e2823395969cf63076"
       ],
       "layout": "IPY_MODEL_d76b9fa1a14f49b7a9a728cc5efe6b6b",
       "tabbable": null,
       "tooltip": null
      }
     },
     "24a54d4ae2914bed9b83e1aa303f8613": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "24cdf2fc293947fc8f10f43bea931c65": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "452e25d6cc934f569a5f08620622d1a3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": "2",
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "45b310e507354727902ef69b02f2b04e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": "inline-flex",
       "flex": null,
       "flex_flow": "row wrap",
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "100%"
      }
     },
     "46d07980702843a1a4e4e20816e39974": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_c115404b0fdc4ed9a7238c86ff6469e0",
       "placeholder": "​",
       "style": "IPY_MODEL_76e3a0f942244f8da5b234b3ad193262",
       "tabbable": null,
       "tooltip": null,
       "value": " 130/130 [03:52&lt;00:00,  1.38s/it]"
      }
     },
     "52f88e3183274beeacde866e925e74a5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "55ecd555b5ac4d4bbd629cf17371df59": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "58dc5398bc3940e8bc39b474fd30f9c2": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "5e33ddc7a0854192a04a3b64dfe715d8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "6fa36acd057443239c4eec6f96e386de": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_24a54d4ae2914bed9b83e1aa303f8613",
       "placeholder": "​",
       "style": "IPY_MODEL_5e33ddc7a0854192a04a3b64dfe715d8",
       "tabbable": null,
       "tooltip": null,
       "value": " 130/130 [02:21&lt;00:00,  1.35s/it]"
      }
     },
     "73c2999b1d6c4dcea077e1fc2b2a1661": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f77b9739086047688cf2086c85fa872e",
       "placeholder": "​",
       "style": "IPY_MODEL_781931d2c00f43258d3f3d8a3d26df8d",
       "tabbable": null,
       "tooltip": null,
       "value": "Performing Bayesian Inference:   0%"
      }
     },
     "76e3a0f942244f8da5b234b3ad193262": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "776dd6f57fee4c88bd5499ac8b7abd4b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "781931d2c00f43258d3f3d8a3d26df8d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "7d2f96e12d13457c98dafa399aa46234": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "7e5aa2f22e004914a88366fe2e2084b1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_069cc40b710140f2a7686efaea0f15df",
       "placeholder": "​",
       "style": "IPY_MODEL_aab5350b0b714a248cdf2def21103e47",
       "tabbable": null,
       "tooltip": null,
       "value": "Refining p0:   0%"
      }
     },
     "84088ff4285a4924853c3e7893c67446": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_99d96c56a9b94f44a213ad82408f4258",
        "IPY_MODEL_f34387c3b9374f4cbde684a305cb577a",
        "IPY_MODEL_6fa36acd057443239c4eec6f96e386de"
       ],
       "layout": "IPY_MODEL_0a2b0c01d67b4b57bc85c60f9b05a27b",
       "tabbable": null,
       "tooltip": null
      }
     },
     "85cae68b1dd344f7a32b4ef741569269": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_24cdf2fc293947fc8f10f43bea931c65",
       "placeholder": "​",
       "style": "IPY_MODEL_7d2f96e12d13457c98dafa399aa46234",
       "tabbable": null,
       "tooltip": null,
       "value": " 0/130 [02:21&lt;?, ?it/s]"
      }
     },
     "862b13d52c5645e2823395969cf63076": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_58dc5398bc3940e8bc39b474fd30f9c2",
       "placeholder": "​",
       "style": "IPY_MODEL_e8f689a2eccb4b38b5ec8c3306b5a11e",
       "tabbable": null,
       "tooltip": null,
       "value": " 0/130 [00:00&lt;?, ?it/s]"
      }
     },
     "8ae3c377c5f24b5491b7a6de4f816ad3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_09cf052a570e49c6b19e986bfe4d2b32",
        "IPY_MODEL_f310a300ee664b19a297840082ab5f06",
        "IPY_MODEL_46d07980702843a1a4e4e20816e39974"
       ],
       "layout": "IPY_MODEL_45b310e507354727902ef69b02f2b04e",
       "tabbable": null,
       "tooltip": null
      }
     },
     "8ff8d32d5a764358acf789f0a06756cc": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "97ba7cfc6652411496b72830f8819199": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "99d96c56a9b94f44a213ad82408f4258": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_97ba7cfc6652411496b72830f8819199",
       "placeholder": "​",
       "style": "IPY_MODEL_a8eb663214b14535a60adc536e54088a",
       "tabbable": null,
       "tooltip": null,
       "value": "Refining p0: 100%"
      }
     },
     "a8eb663214b14535a60adc536e54088a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "aab5350b0b714a248cdf2def21103e47": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "bae421a6923e4656970be89a80c132c7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": "2",
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "bc9caac6b77c4eafb1c9dafe010891ce": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_7e5aa2f22e004914a88366fe2e2084b1",
        "IPY_MODEL_bd883824a32745519c7a416c5ea7dc29",
        "IPY_MODEL_85cae68b1dd344f7a32b4ef741569269"
       ],
       "layout": "IPY_MODEL_fc6ba00f1f03418b8e023aea47d75500",
       "tabbable": null,
       "tooltip": null
      }
     },
     "bd883824a32745519c7a416c5ea7dc29": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "danger",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_452e25d6cc934f569a5f08620622d1a3",
       "max": 130.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_c4412a9b9142417381c4fe5cf76e35ac",
       "tabbable": null,
       "tooltip": null,
       "value": 0.0
      }
     },
     "bdcbcf743e7446f0ae0bc460fb96f17d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": "2",
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c115404b0fdc4ed9a7238c86ff6469e0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c4412a9b9142417381c4fe5cf76e35ac": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "c94d7322790c42a289bc04cd74cc1263": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": "2",
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "d76b9fa1a14f49b7a9a728cc5efe6b6b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": "inline-flex",
       "flex": null,
       "flex_flow": "row wrap",
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "100%"
      }
     },
     "e5fd82142a7344e2b61e4e42f61b45cd": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "danger",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_c94d7322790c42a289bc04cd74cc1263",
       "max": 130.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_8ff8d32d5a764358acf789f0a06756cc",
       "tabbable": null,
       "tooltip": null,
       "value": 0.0
      }
     },
     "e8f689a2eccb4b38b5ec8c3306b5a11e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "f310a300ee664b19a297840082ab5f06": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_bae421a6923e4656970be89a80c132c7",
       "max": 130.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_117be8fc61124517b6c56b910218ebb3",
       "tabbable": null,
       "tooltip": null,
       "value": 130.0
      }
     },
     "f34387c3b9374f4cbde684a305cb577a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_bdcbcf743e7446f0ae0bc460fb96f17d",
       "max": 130.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_52f88e3183274beeacde866e925e74a5",
       "tabbable": null,
       "tooltip": null,
       "value": 130.0
      }
     },
     "f77b9739086047688cf2086c85fa872e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "fc6ba00f1f03418b8e023aea47d75500": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": "inline-flex",
       "flex": null,
       "flex_flow": "row wrap",
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "100%"
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}

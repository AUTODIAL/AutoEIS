Search.setIndex({"docnames": ["basic_usage", "circuit", "generated/autoeis.core", "generated/autoeis.io", "generated/autoeis.parser", "generated/autoeis.utils", "generated/autoeis.visualization", "generated/generated/autoeis.core.filter_implausible_circuits", "generated/generated/autoeis.core.generate_equivalent_circuits", "generated/generated/autoeis.core.perform_bayesian_inference", "generated/generated/autoeis.core.perform_bayesian_inference_batch", "generated/generated/autoeis.core.perform_full_analysis", "generated/generated/autoeis.core.preprocess_impedance_data", "generated/generated/autoeis.io.get_assets_path", "generated/generated/autoeis.io.load_test_circuits", "generated/generated/autoeis.io.load_test_dataset", "generated/generated/autoeis.io.parse_ec_output", "generated/generated/autoeis.parser.convert_to_impedance_format", "generated/generated/autoeis.parser.count_parameters", "generated/generated/autoeis.parser.find_ohmic_resistors", "generated/generated/autoeis.parser.get_component_labels", "generated/generated/autoeis.parser.get_component_types", "generated/generated/autoeis.parser.get_parameter_labels", "generated/generated/autoeis.parser.get_parameter_types", "generated/generated/autoeis.parser.group_parameters_by_component", "generated/generated/autoeis.parser.group_parameters_by_type", "generated/generated/autoeis.parser.parse_component", "generated/generated/autoeis.parser.parse_parameter", "generated/generated/autoeis.parser.validate_circuit", "generated/generated/autoeis.parser.validate_parameter", "generated/generated/autoeis.utils.are_circuits_equivalent", "generated/generated/autoeis.utils.circuit_complexity", "generated/generated/autoeis.utils.fit_circuit_parameters", "generated/generated/autoeis.utils.generate_circuit_fn", "generated/generated/autoeis.utils.generate_circuit_fn_impedance_backend", "generated/generated/autoeis.utils.initialize_priors", "generated/generated/autoeis.utils.initialize_priors_from_posteriors", "generated/generated/autoeis.utils.validate_circuits_dataframe", "generated/generated/autoeis.visualization.draw_circuit", "generated/generated/autoeis.visualization.plot_impedance_combo", "generated/generated/autoeis.visualization.plot_linKK_residuals", "generated/generated/autoeis.visualization.plot_nyquist", "generated/generated/autoeis.visualization.set_plot_style", "generated/generated/autoeis.visualization.show_nticks", "index", "installation", "modules"], "filenames": ["basic_usage.md", "circuit.md", "generated/autoeis.core.rst", "generated/autoeis.io.rst", "generated/autoeis.parser.rst", "generated/autoeis.utils.rst", "generated/autoeis.visualization.rst", "generated/generated/autoeis.core.filter_implausible_circuits.rst", "generated/generated/autoeis.core.generate_equivalent_circuits.rst", "generated/generated/autoeis.core.perform_bayesian_inference.rst", "generated/generated/autoeis.core.perform_bayesian_inference_batch.rst", "generated/generated/autoeis.core.perform_full_analysis.rst", "generated/generated/autoeis.core.preprocess_impedance_data.rst", "generated/generated/autoeis.io.get_assets_path.rst", "generated/generated/autoeis.io.load_test_circuits.rst", "generated/generated/autoeis.io.load_test_dataset.rst", "generated/generated/autoeis.io.parse_ec_output.rst", "generated/generated/autoeis.parser.convert_to_impedance_format.rst", "generated/generated/autoeis.parser.count_parameters.rst", "generated/generated/autoeis.parser.find_ohmic_resistors.rst", "generated/generated/autoeis.parser.get_component_labels.rst", "generated/generated/autoeis.parser.get_component_types.rst", "generated/generated/autoeis.parser.get_parameter_labels.rst", "generated/generated/autoeis.parser.get_parameter_types.rst", "generated/generated/autoeis.parser.group_parameters_by_component.rst", "generated/generated/autoeis.parser.group_parameters_by_type.rst", "generated/generated/autoeis.parser.parse_component.rst", "generated/generated/autoeis.parser.parse_parameter.rst", "generated/generated/autoeis.parser.validate_circuit.rst", "generated/generated/autoeis.parser.validate_parameter.rst", "generated/generated/autoeis.utils.are_circuits_equivalent.rst", "generated/generated/autoeis.utils.circuit_complexity.rst", "generated/generated/autoeis.utils.fit_circuit_parameters.rst", "generated/generated/autoeis.utils.generate_circuit_fn.rst", "generated/generated/autoeis.utils.generate_circuit_fn_impedance_backend.rst", "generated/generated/autoeis.utils.initialize_priors.rst", "generated/generated/autoeis.utils.initialize_priors_from_posteriors.rst", "generated/generated/autoeis.utils.validate_circuits_dataframe.rst", "generated/generated/autoeis.visualization.draw_circuit.rst", "generated/generated/autoeis.visualization.plot_impedance_combo.rst", "generated/generated/autoeis.visualization.plot_linKK_residuals.rst", "generated/generated/autoeis.visualization.plot_nyquist.rst", "generated/generated/autoeis.visualization.set_plot_style.rst", "generated/generated/autoeis.visualization.show_nticks.rst", "index.rst", "installation.md", "modules.rst"], "titles": ["Basic usage", "Circuit notation", "core", "io", "parser", "utils", "visualization", "filter_implausible_circuits", "generate_equivalent_circuits", "perform_bayesian_inference", "perform_bayesian_inference_batch", "perform_full_analysis", "preprocess_impedance_data", "get_assets_path", "load_test_circuits", "load_test_dataset", "parse_ec_output", "convert_to_impedance_format", "count_parameters", "find_ohmic_resistors", "get_component_labels", "get_component_types", "get_parameter_labels", "get_parameter_types", "group_parameters_by_component", "group_parameters_by_type", "parse_component", "parse_parameter", "validate_circuit", "validate_parameter", "are_circuits_equivalent", "circuit_complexity", "fit_circuit_parameters", "generate_circuit_fn", "generate_circuit_fn_impedance_backend", "initialize_priors", "initialize_priors_from_posteriors", "validate_circuits_dataframe", "draw_circuit", "plot_impedance_combo", "plot_linKK_residuals", "plot_nyquist", "set_plot_style", "show_nticks", "AutoEIS: Automated EIS Analysis", "Installation", "API Reference"], "terms": {"To": [0, 45], "us": [0, 1, 5, 8, 17, 34, 38, 45, 46], "autoei": [0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46], "you": [0, 44, 45], "can": [0, 45], "either": 0, "perform": [0, 8, 9, 10, 11, 46], "circuit": [0, 4, 7, 8, 9, 10, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 33, 34, 35, 37, 38, 44, 45, 46], "gener": [0, 7, 8, 11, 12, 45], "bayesian": [0, 9, 10, 11], "infer": [0, 9, 10, 11], "step": [0, 45], "perform_full_analysi": 0, "function": [0, 2, 3, 4, 5, 6, 34, 45, 46], "whole": 0, "process": [0, 12], "automat": [0, 44, 45], "The": [0, 1, 38, 44, 45], "follow": [0, 1, 11, 45], "i": [0, 1, 8, 9, 10, 11, 12, 28, 29, 45], "minim": 0, "exampl": [0, 1], "how": 0, "import": [0, 3, 45], "ae": 0, "load": 0, "visual": [0, 38, 39, 40, 41, 42, 43, 46], "test": [0, 14, 15], "dataset": [0, 14, 15], "z": [0, 8, 9, 10, 11, 12, 39, 41], "freq": [0, 8, 9, 10, 11, 12, 39, 40], "io": [0, 13, 14, 15, 16, 46], "load_test_dataset": 0, "plot_impedance_combo": 0, "full": 0, "analysi": [0, 11, 46], "iter": [0, 8, 11], "12": [0, 8], "parallel": [0, 1, 8, 10, 11], "true": [0, 8, 9, 10, 11, 12, 42, 43], "print": [0, 45], "while": 0, "abov": [0, 1], "should": [0, 45], "work": [0, 45], "out": [0, 12], "box": 0, "recommend": 0, "fashion": 0, "have": [0, 44], "more": 0, "control": [0, 12], "over": 0, "furthermor": 0, "ll": 0, "learn": 0, "about": 0, "inner": 0, "thi": [0, 45], "wai": [0, 45], "an": [0, 44], "notebook": 0, "demonstr": 0, "detail": 0, "found": 0, "here": 0, "apart": 0, "from": [0, 44], "ar": [0, 1, 30, 45], "yet": 0, "document": 0, "until": 0, "we": [0, 44], "add": 0, "featur": 0, "find": [0, 19, 44, 46], "list": [0, 10, 19, 20, 21, 22, 23, 24, 25, 31, 35, 36, 39], "api": [0, 44], "refer": [0, 44], "section": 0, "custom": 1, "repres": 1, "model": [1, 38, 44], "base": [1, 9, 36, 45], "two": [1, 30], "rule": [1, 7], "element": 1, "seri": 1, "separ": 1, "symbol": 1, "enclos": 1, "squar": [1, 12], "bracket": 1, "For": 1, "r1": 1, "c2": 1, "r3": 1, "p4": 1, "r5": 1, "r6": 1, "c7": 1, "As": 1, "compon": [1, 11, 20, 21, 24, 25, 26, 31], "name": 1, "convent": 1, "r": 1, "resistor": [1, 19], "c": [1, 26, 45], "capacitor": 1, "l": 1, "inductor": 1, "p": [1, 27, 29], "constant": 1, "phase": 1, "cpe": 1, "each": 1, "parameter": 1, "singl": 1, "valu": 1, "which": 1, "ohm": 1, "farad": 1, "henri": 1, "respect": 1, "magnitud": 1, "q": 1, "w": 1, "expon": 1, "alpha": [1, 41], "n": [1, 43], "equat": 1, "z_": 1, "frac": 1, "1": [1, 9, 10, 41, 45], "time": [1, 45], "j": 1, "omega": 1, "consid": 1, "correspond": [1, 8, 11, 12], "p4w": 1, "p4n": 1, "other": 1, "basic": [1, 44], "paramet": [1, 7, 8, 9, 10, 11, 12, 16, 18, 22, 23, 24, 25, 27, 29, 38], "same": 1, "collect": [2, 3, 4, 5, 6], "export": 3, "ei": [3, 6, 11, 39, 41], "data": [3, 6, 8, 9, 10, 11, 12, 39, 41, 46], "result": [3, 6, 11], "pars": [4, 16, 46], "string": [4, 9, 10, 17, 18, 20, 21, 22, 23, 28, 30, 34, 38, 46], "throughout": 5, "packag": [5, 44, 45], "core": [7, 8, 9, 10, 11, 12, 46], "datafram": [7, 8, 10, 11, 14, 16, 37], "appli": [7, 12], "heurist": 7, "filter": [7, 12, 14], "ecm": [7, 8, 11, 44], "pd": [7, 8, 10, 11], "contain": [7, 8, 10, 11, 46], "return": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 26, 27, 38], "plausibl": [7, 11, 44], "type": [7, 8, 9, 10, 11, 12, 20, 21, 22, 23, 25, 26, 27, 38], "imped": [8, 9, 10, 11, 12, 15, 17, 34, 44], "ndarrai": [8, 9, 10, 11, 12, 15, 36, 39, 40, 41], "complex": [8, 9, 10, 11, 12, 15, 31, 39, 41], "float": [8, 9, 10, 11, 12, 15, 16, 35, 36, 39, 40], "int": [8, 9, 10, 11, 18, 31, 39, 41, 43], "100": [8, 11], "tol": [8, 11], "0": [8, 9, 10, 11, 12], "01": [8, 11], "bool": [8, 9, 11, 12, 21, 23, 28, 29, 30, 42, 43], "30": 8, "population_s": 8, "seed": [8, 9, 10], "none": [8, 9, 10, 20, 22, 39, 40, 41], "candid": 8, "fit": [8, 11, 14, 46], "genet": 8, "algorithm": 8, "np": [8, 9, 10, 11, 12], "measur": [8, 12], "frequenc": [8, 9, 10, 11, 12, 15], "option": [8, 9, 10, 11, 12, 45], "number": [8, 11, 18, 45], "default": [8, 9, 10, 11, 12, 42], "search": 8, "space": 8, "converg": [8, 11], "threshold": [8, 11, 12], "1e": [8, 11], "2": [8, 11], "If": [8, 11, 12, 44, 45], "per": 8, "random": [8, 9, 10], "reproduc": [8, 9, 10], "str": [9, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 41], "p0": [9, 10, 35], "dict": [9, 10, 16, 24, 25, 35, 36], "num_warmup": [9, 10, 11], "1000": [9, 10, 11], "num_sampl": [9, 10, 11], "num_chain": [9, 10], "arrai": [9, 10, 15], "progress_bar": [9, 10], "tupl": [9, 10, 12, 15, 39, 40, 41], "mcmc": [9, 10, 11], "union": 9, "initi": [9, 10, 35], "guess": [9, 10], "jax": 9, "object": [9, 10], "exit": [9, 10], "code": [9, 10], "success": [9, 10], "fail": [9, 10], "numpyro": [9, 10], "2500": [10, 11], "linkk_threshold": 11, "05": [11, 12], "autom": 11, "done": [11, 45], "lin": 11, "kk": [11, 12], "valid": [11, 12, 28, 29, 37, 40], "5e": 11, "warmup": 11, "sampl": 11, "plot": [12, 39, 40, 41, 42, 46], "fals": [12, 14, 21, 23, 33, 43], "preprocess": 12, "posit": 12, "imaginari": 12, "part": 12, "high": 12, "effect": 12, "dure": 12, "rmse": 12, "root": 12, "mean": 12, "error": 12, "v": 12, "path": 13, "asset": 13, "folder": 13, "equival": [14, 30, 44], "output": 16, "equivalentcircuit": 16, "jl": 16, "": 16, "circuit_evolut": 16, "store": [16, 38, 45], "parser": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 46], "convert": [17, 34], "format": [17, 37], "py": [17, 34], "fulli": 18, "describ": 18, "all": [19, 20, 22, 45], "ohmic": 19, "nest": 19, "express": 19, "label": [20, 22, 24, 25, 26, 27, 29, 41], "uniqu": [21, 23], "group": [24, 25], "check": [28, 29, 30], "util": [30, 31, 32, 33, 34, 35, 36, 37, 46], "circuit1": 30, "circuit2": 30, "comput": 31, "arg": 32, "kwarg": 32, "jit": 33, "callabl": 34, "variabl": [35, 36], "distribut": [35, 36], "prior": [35, 36], "given": 35, "posterior": 36, "dist_typ": 36, "lognorm": 36, "creat": [36, 45], "new": [36, 45], "column": 37, "dtype": 37, "figur": [38, 39, 40, 41], "draw": 38, "lcapi": 38, "configur": 38, "fig": 38, "handl": 38, "size": [39, 41], "10": [39, 43], "ax": [39, 40, 41, 43], "nyquist": [39, 41], "bode": 39, "res_real": 40, "res_imag": 40, "residu": 40, "linear": 40, "kramer": 40, "kronig": 40, "fmt": 41, "o": 41, "4": 41, "color": 41, "use_arviz": 42, "use_seaborn": 42, "use_flexoki": 42, "modifi": [42, 43], "arviz": 42, "matplotlib": [42, 43], "config": 42, "prettier": 42, "x": 43, "y": 43, "In": 43, "place": 43, "show": 43, "onli": 43, "tick": 43, "python": [44, 45], "propos": 44, "statist": 44, "electrochem": 44, "spectroscopi": 44, "design": 44, "research": 44, "practition": 44, "field": 44, "includ": 44, "limit": 44, "explor": 44, "electrocatalysi": 44, "batteri": 44, "investig": 44, "materi": 44, "degrad": 44, "still": 44, "under": 44, "develop": 44, "therefor": 44, "stabl": 44, "ani": 44, "bug": 44, "suggest": 44, "pleas": [44, 45], "file": 44, "issu": 44, "directli": 44, "submit": 44, "pull": 44, "request": 44, "would": 44, "greatli": 44, "appreci": 44, "contribut": 44, "commun": 44, "instal": 44, "usag": 44, "notat": 44, "instruct": 45, "below": 45, "its": 45, "open": 45, "termin": 45, "command": 45, "prompt": 45, "window": 45, "run": 45, "pip": 45, "u": 45, "offici": 45, "via": 45, "juliaup": 45, "provid": 45, "line": 45, "interfac": 45, "multipl": 45, "side": 45, "straightforward": 45, "github": 45, "page": 45, "requir": 45, "9": 45, "higher": 45, "strict": 45, "due": 45, "mani": 45, "optim": 45, "introduc": 45, "significantli": 45, "reduc": 45, "startup": 45, "backend": 45, "helper": [45, 46], "m": 45, "doesn": 45, "t": 45, "pollut": 45, "your": 45, "global": 45, "instead": 45, "call": 45, "version_numb": 45, "safe": 45, "without": 45, "worri": 45, "break": 45, "directori": 45, "unix": 45, "system": 45, "userprofil": 45, "were": 45, "complet": 45, "successfulli": 45, "now": 45, "abl": 45, "confirm": 45, "correctli": 45, "__version__": 45, "five": 46, "modul": 46, "read": 46, "write": 46, "best": 46}, "objects": {"": [[46, 0, 0, "-", "autoeis"]], "autoeis": [[2, 0, 0, "-", "core"], [3, 0, 0, "-", "io"], [4, 0, 0, "-", "parser"], [5, 0, 0, "-", "utils"], [6, 0, 0, "-", "visualization"]], "autoeis.core": [[7, 1, 1, "", "filter_implausible_circuits"], [8, 1, 1, "", "generate_equivalent_circuits"], [9, 1, 1, "", "perform_bayesian_inference"], [10, 1, 1, "", "perform_bayesian_inference_batch"], [11, 1, 1, "", "perform_full_analysis"], [12, 1, 1, "", "preprocess_impedance_data"]], "autoeis.io": [[13, 1, 1, "", "get_assets_path"], [14, 1, 1, "", "load_test_circuits"], [15, 1, 1, "", "load_test_dataset"], [16, 1, 1, "", "parse_ec_output"]], "autoeis.parser": [[17, 1, 1, "", "convert_to_impedance_format"], [18, 1, 1, "", "count_parameters"], [19, 1, 1, "", "find_ohmic_resistors"], [20, 1, 1, "", "get_component_labels"], [21, 1, 1, "", "get_component_types"], [22, 1, 1, "", "get_parameter_labels"], [23, 1, 1, "", "get_parameter_types"], [24, 1, 1, "", "group_parameters_by_component"], [25, 1, 1, "", "group_parameters_by_type"], [26, 1, 1, "", "parse_component"], [27, 1, 1, "", "parse_parameter"], [28, 1, 1, "", "validate_circuit"], [29, 1, 1, "", "validate_parameter"]], "autoeis.utils": [[30, 1, 1, "", "are_circuits_equivalent"], [31, 1, 1, "", "circuit_complexity"], [32, 1, 1, "", "fit_circuit_parameters"], [33, 1, 1, "", "generate_circuit_fn"], [34, 1, 1, "", "generate_circuit_fn_impedance_backend"], [35, 1, 1, "", "initialize_priors"], [36, 1, 1, "", "initialize_priors_from_posteriors"], [37, 1, 1, "", "validate_circuits_dataframe"]], "autoeis.visualization": [[38, 1, 1, "", "draw_circuit"], [39, 1, 1, "", "plot_impedance_combo"], [40, 1, 1, "", "plot_linKK_residuals"], [41, 1, 1, "", "plot_nyquist"], [42, 1, 1, "", "set_plot_style"], [43, 1, 1, "", "show_nticks"]]}, "objtypes": {"0": "py:module", "1": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"]}, "titleterms": {"basic": 0, "usag": 0, "circuit": 1, "notat": 1, "core": 2, "io": 3, "parser": 4, "util": 5, "visual": 6, "filter_implausible_circuit": 7, "generate_equivalent_circuit": 8, "perform_bayesian_infer": 9, "perform_bayesian_inference_batch": 10, "perform_full_analysi": 11, "preprocess_impedance_data": 12, "get_assets_path": 13, "load_test_circuit": 14, "load_test_dataset": 15, "parse_ec_output": 16, "convert_to_impedance_format": 17, "count_paramet": 18, "find_ohmic_resistor": 19, "get_component_label": 20, "get_component_typ": 21, "get_parameter_label": 22, "get_parameter_typ": 23, "group_parameters_by_compon": 24, "group_parameters_by_typ": 25, "parse_compon": 26, "parse_paramet": 27, "validate_circuit": 28, "validate_paramet": 29, "are_circuits_equival": 30, "circuit_complex": 31, "fit_circuit_paramet": 32, "generate_circuit_fn": 33, "generate_circuit_fn_impedance_backend": 34, "initialize_prior": 35, "initialize_priors_from_posterior": 36, "validate_circuits_datafram": 37, "draw_circuit": 38, "plot_impedance_combo": 39, "plot_linkk_residu": 40, "plot_nyquist": 41, "set_plot_styl": 42, "show_ntick": 43, "autoei": [44, 45], "autom": 44, "ei": 44, "analysi": 44, "what": 44, "i": 44, "content": 44, "instal": 45, "julia": 45, "depend": 45, "languag": 45, "minimum": 45, "version": 45, "equivalentcircuit": 45, "jl": 45, "about": 45, "share": 45, "environ": 45, "verifi": 45, "api": 46, "refer": 46}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Basic usage": [[0, "basic-usage"]], "Circuit notation": [[1, "circuit-notation"]], "core": [[2, "module-autoeis.core"]], "io": [[3, "module-autoeis.io"]], "parser": [[4, "module-autoeis.parser"]], "utils": [[5, "module-autoeis.utils"]], "visualization": [[6, "module-autoeis.visualization"]], "filter_implausible_circuits": [[7, "filter-implausible-circuits"]], "generate_equivalent_circuits": [[8, "generate-equivalent-circuits"]], "perform_bayesian_inference": [[9, "perform-bayesian-inference"]], "perform_bayesian_inference_batch": [[10, "perform-bayesian-inference-batch"]], "perform_full_analysis": [[11, "perform-full-analysis"]], "preprocess_impedance_data": [[12, "preprocess-impedance-data"]], "get_assets_path": [[13, "get-assets-path"]], "load_test_circuits": [[14, "load-test-circuits"]], "load_test_dataset": [[15, "load-test-dataset"]], "parse_ec_output": [[16, "parse-ec-output"]], "convert_to_impedance_format": [[17, "convert-to-impedance-format"]], "count_parameters": [[18, "count-parameters"]], "find_ohmic_resistors": [[19, "find-ohmic-resistors"]], "get_component_labels": [[20, "get-component-labels"]], "get_component_types": [[21, "get-component-types"]], "get_parameter_labels": [[22, "get-parameter-labels"]], "get_parameter_types": [[23, "get-parameter-types"]], "group_parameters_by_component": [[24, "group-parameters-by-component"]], "group_parameters_by_type": [[25, "group-parameters-by-type"]], "parse_component": [[26, "parse-component"]], "parse_parameter": [[27, "parse-parameter"]], "validate_circuit": [[28, "validate-circuit"]], "validate_parameter": [[29, "validate-parameter"]], "are_circuits_equivalent": [[30, "are-circuits-equivalent"]], "circuit_complexity": [[31, "circuit-complexity"]], "fit_circuit_parameters": [[32, "fit-circuit-parameters"]], "generate_circuit_fn": [[33, "generate-circuit-fn"]], "generate_circuit_fn_impedance_backend": [[34, "generate-circuit-fn-impedance-backend"]], "initialize_priors": [[35, "initialize-priors"]], "initialize_priors_from_posteriors": [[36, "initialize-priors-from-posteriors"]], "validate_circuits_dataframe": [[37, "validate-circuits-dataframe"]], "draw_circuit": [[38, "draw-circuit"]], "plot_impedance_combo": [[39, "plot-impedance-combo"]], "plot_linKK_residuals": [[40, "plot-linkk-residuals"]], "plot_nyquist": [[41, "plot-nyquist"]], "set_plot_style": [[42, "set-plot-style"]], "show_nticks": [[43, "show-nticks"]], "AutoEIS: Automated EIS Analysis": [[44, "autoeis-automated-eis-analysis"]], "What is AutoEIS?": [[44, "what-is-autoeis"]], "Contents": [[44, "contents"]], "Installation": [[45, "installation"]], "AutoEIS": [[45, "autoeis"]], "Julia dependencies": [[45, "julia-dependencies"]], "Julia language": [[45, "julia-language"]], "Minimum Julia version": [[45, null]], "EquivalentCircuits.jl": [[45, "equivalentcircuits-jl"]], "About shared environments": [[45, null]], "Verify the installation": [[45, "verify-the-installation"]], "API Reference": [[46, "api-reference"]]}, "indexentries": {"autoeis.core": [[2, "module-autoeis.core"]], "module": [[2, "module-autoeis.core"], [3, "module-autoeis.io"], [4, "module-autoeis.parser"], [5, "module-autoeis.utils"], [6, "module-autoeis.visualization"], [46, "module-autoeis"]], "autoeis.io": [[3, "module-autoeis.io"]], "autoeis.parser": [[4, "module-autoeis.parser"]], "autoeis.utils": [[5, "module-autoeis.utils"]], "autoeis.visualization": [[6, "module-autoeis.visualization"]], "filter_implausible_circuits() (in module autoeis.core)": [[7, "autoeis.core.filter_implausible_circuits"]], "generate_equivalent_circuits() (in module autoeis.core)": [[8, "autoeis.core.generate_equivalent_circuits"]], "perform_bayesian_inference() (in module autoeis.core)": [[9, "autoeis.core.perform_bayesian_inference"]], "perform_bayesian_inference_batch() (in module autoeis.core)": [[10, "autoeis.core.perform_bayesian_inference_batch"]], "perform_full_analysis() (in module autoeis.core)": [[11, "autoeis.core.perform_full_analysis"]], "preprocess_impedance_data() (in module autoeis.core)": [[12, "autoeis.core.preprocess_impedance_data"]], "get_assets_path() (in module autoeis.io)": [[13, "autoeis.io.get_assets_path"]], "load_test_circuits() (in module autoeis.io)": [[14, "autoeis.io.load_test_circuits"]], "load_test_dataset() (in module autoeis.io)": [[15, "autoeis.io.load_test_dataset"]], "parse_ec_output() (in module autoeis.io)": [[16, "autoeis.io.parse_ec_output"]], "convert_to_impedance_format() (in module autoeis.parser)": [[17, "autoeis.parser.convert_to_impedance_format"]], "count_parameters() (in module autoeis.parser)": [[18, "autoeis.parser.count_parameters"]], "find_ohmic_resistors() (in module autoeis.parser)": [[19, "autoeis.parser.find_ohmic_resistors"]], "get_component_labels() (in module autoeis.parser)": [[20, "autoeis.parser.get_component_labels"]], "get_component_types() (in module autoeis.parser)": [[21, "autoeis.parser.get_component_types"]], "get_parameter_labels() (in module autoeis.parser)": [[22, "autoeis.parser.get_parameter_labels"]], "get_parameter_types() (in module autoeis.parser)": [[23, "autoeis.parser.get_parameter_types"]], "group_parameters_by_component() (in module autoeis.parser)": [[24, "autoeis.parser.group_parameters_by_component"]], "group_parameters_by_type() (in module autoeis.parser)": [[25, "autoeis.parser.group_parameters_by_type"]], "parse_component() (in module autoeis.parser)": [[26, "autoeis.parser.parse_component"]], "parse_parameter() (in module autoeis.parser)": [[27, "autoeis.parser.parse_parameter"]], "validate_circuit() (in module autoeis.parser)": [[28, "autoeis.parser.validate_circuit"]], "validate_parameter() (in module autoeis.parser)": [[29, "autoeis.parser.validate_parameter"]], "are_circuits_equivalent() (in module autoeis.utils)": [[30, "autoeis.utils.are_circuits_equivalent"]], "circuit_complexity() (in module autoeis.utils)": [[31, "autoeis.utils.circuit_complexity"]], "fit_circuit_parameters() (in module autoeis.utils)": [[32, "autoeis.utils.fit_circuit_parameters"]], "generate_circuit_fn() (in module autoeis.utils)": [[33, "autoeis.utils.generate_circuit_fn"]], "generate_circuit_fn_impedance_backend() (in module autoeis.utils)": [[34, "autoeis.utils.generate_circuit_fn_impedance_backend"]], "initialize_priors() (in module autoeis.utils)": [[35, "autoeis.utils.initialize_priors"]], "initialize_priors_from_posteriors() (in module autoeis.utils)": [[36, "autoeis.utils.initialize_priors_from_posteriors"]], "validate_circuits_dataframe() (in module autoeis.utils)": [[37, "autoeis.utils.validate_circuits_dataframe"]], "draw_circuit() (in module autoeis.visualization)": [[38, "autoeis.visualization.draw_circuit"]], "plot_impedance_combo() (in module autoeis.visualization)": [[39, "autoeis.visualization.plot_impedance_combo"]], "plot_linkk_residuals() (in module autoeis.visualization)": [[40, "autoeis.visualization.plot_linKK_residuals"]], "plot_nyquist() (in module autoeis.visualization)": [[41, "autoeis.visualization.plot_nyquist"]], "set_plot_style() (in module autoeis.visualization)": [[42, "autoeis.visualization.set_plot_style"]], "show_nticks() (in module autoeis.visualization)": [[43, "autoeis.visualization.show_nticks"]], "autoeis": [[46, "module-autoeis"]]}})